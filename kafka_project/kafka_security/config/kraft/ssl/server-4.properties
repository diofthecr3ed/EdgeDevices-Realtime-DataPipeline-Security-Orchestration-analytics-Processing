# The role of this server. Setting this puts us in KRaft mode
process.roles=broker

# The node id associated with this instance's roles
node.id=4

# The connect string for the controller quorum
controller.quorum.voters=0@localhost:9093,1@localhost:9094,2@localhost:9095

# Should contain the address:port of all the roles specified in process.roles
listeners=SSL://localhost:9097

# Name of listener used for communication between brokers
# Set this only when the node performs broker role
# Skip this for controller-only nodes
# Replace this via security.inter.broker.protocol when PLAINTEXT is not used
#inter.broker.listener.name=PLAINTEXT

# Always set this when the node performs broker role. Skip when the node performs controller-only role
advertised.listeners=SSL://localhost:9096

# A comma-separated list of the names of the listeners used by the controller.
# Make sure that the listener name provided is not the same as in advertised.listeners even if the protocol is the same (when running in both controller and broker mode)
# Listener name and protocol name mapping can be done in listener.security.protocol.map
controller.listener.names=CONTROLLER_SSL

# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
listener.security.protocol.map=CONTROLLER:PLAINTEXT,CONTROLLER_SSL:SSL,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL

# A comma separated list of directories under which to store log files
metadata.log.dir=/Users/vinod/mymac/kafka/metadata/node-4
log.dirs=/Users/vinod/mymac/kafka/data/node-4

# The default number of log partitions per topic
num.partitions=3

# Go with the default settings for below parameters in Development and Testing. For Production, it depends on the workload
num.network.threads=3
num.io.threads=8
socket.send.buffer.bytes=102400
socket.receive.buffer.bytes=102400
socket.request.max.bytes=104857600
num.recovery.threads.per.data.dir=1
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1
log.retention.hours=168
log.segment.bytes=1073741824
log.retention.check.interval.ms=300000

# Properties for SSL Kafka Security between Nodes and its clients
# For example, SSL context will be established when following connection scenario happens,
# 1) between two brokers
# 2) between a broker and a kafka client such as producer
# 3) between two controllers
# 4) between a controller and a broker

ssl.truststore.location=/Users/vinod/mymac/kafka/ssl/kafka.node-4.truststore.jks
ssl.truststore.password=vinod123
ssl.keystore.location=/Users/vinod/mymac/kafka/ssl/kafka.node-4.keystore.jks
ssl.keystore.password=vinod123
ssl.key.password=vinod1234

# security.inter.broker.protocol is set only when node performs broker role. Skipped for controller-only nodes
security.inter.broker.protocol=SSL

ssl.client.auth=required
ssl.enabled.protocols=TLSv1.2
ssl.protocol=TLSv1.2


